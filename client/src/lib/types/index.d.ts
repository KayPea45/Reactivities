type Activity = {
   id: string;
   title: string;
   date: Date;
   description: string;
   category: string;
   city: string;
   venue: string;
   latitude: number;
   longitude: number;

   attendees: Profile[];    // generated from the server
   isGoing: boolean;        // Will need to set ourselves in useActivity hook 
   isHost: boolean;         // Will need to set ourselves in useActivity hook 
   isCancelled: boolean;    // generated from the server
   hostId: string;          // generated from the server
   hostDisplayName: string; // generated from the server
};

type Profile = {
  // User Profile/Attendee attributes
  id: string;
  displayName: string;
  bio?: string;
  imageUrl?: string;
}

// for User, id is already generated by the server via Identity when we register a new user
type User = {
  id: string
  email: string
  displayName: string
  imageUrl?: string
}

//* Location IQ Autocomplete API
type LocationIQSuggestion = {
   place_id: string
   osm_id: string
   osm_type: string
   licence: string
   lat: string
   lon: string
   boundingbox: string[]
   class: string
   type: string
   display_name: string
   display_place: string
   display_address: string
   address: LocationIQAddress
 }
 
type LocationIQAddress = {
   name: string
   house_number: string
   road: string
   neighbourhood: string
   suburb?: string
   town?: string
   village?: string
   city?: string
   state: string
   postcode: string
   country: string
   country_code: string
 }
//* endof Location IQ Autocomplete API